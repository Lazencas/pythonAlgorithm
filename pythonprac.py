# 리스트는 순서가 중요 , 딕셔너리는 키와 밸류 딕셔너리는 자를때 위치아니고 키값으로 자름
# enumerate 이거 하면 for문 앞에 인덱스가 생김
# 튜플(tuple) 리스트와 같지만 불변형 그리고 ()사용,
# 집합(set) 중복 제거, 교집합 a & b,  합집합 a | b, 차집합 a - b
# f-string  print(f'{name}의 점수는 {score}점 입니다.')
# try: except:
# 파이썬에서 뭔가 이상하면 문자열 숫자 형태 확인하자.
# 파일불러오기: from {불러올파일이름} import *
# map 반복문 함수버전이라고 생각하면 됨, lamda식 map의 한줄쓰기 버전
# filter map과 유사한데 True인것만 뽑아옴
# *args 함수 매개 변수로 사용하면 모든타입 받을 수 있다.
# **kwargs 받은 매개변수를 딕션어리로 받음.
# 클래스는 언제 사용하는가? 여러개의 객체를 관리해야 할 일이 생길때(해당 객체가 수정이 빈번하거나)
# 파이썬에서 input으로 입력받으면 기본적으로 문자열로 받는다.
# format(a,".2f") 소수점 2번째 자리까지 표시,3번째 자리에서 반올림 


a, b = input().split()

print(bool(int(a)) and bool(int(b)))